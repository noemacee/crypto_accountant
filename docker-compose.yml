version: "3.9"

services:
  frontend:
    container_name: accounter_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT_HOST}:${FRONTEND_PORT_CONTAINER}"
    environment:
      - API_URL=${BACKEND_API_URL}
    env_file:
      - .env # Shared .env file
      - ./frontend/.env # Frontend-specific .env file
    depends_on:
      - backend # Ensure backend is ready before frontend starts

  backend:
    container_name: accounter_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env # Shared .env file
      - ./backend/.env # Backend-specific .env file
    ports:
      - "${BACKEND_PORT_HOST}:${BACKEND_PORT_CONTAINER}"
    volumes:
      - ./backend:/app # Mount backend code for live updates (optional)
    depends_on:
      - db

  db:
    # Database service (POSTGRES_HOST)
    container_name: ${DATABASE_CONTAINER_NAME}
    image: postgres:14
    env_file:
      - .env # Shared .env file
      - ./backend/.env # Use an environment file for sensitive values
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - DB_VOLUME:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./backend/db/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro

volumes:
  DB_VOLUME:


